<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yaouguoji.platform.mapper.ShopUserAnalysisMapper">

    <resultMap id="ageAndSexSplit" type="com.yaouguoji.platform.entity.UserSexAndAgeEntity">
        <result column="numberOfPeople" property="numberOfPeople"/>
        <result column="Sex" property="sex"/>
        <result column="age" property="age"/>
    </resultMap>

    <resultMap id="userPriceCount" type="com.yaouguoji.platform.entity.UserPriceCountEntity">
        <result column="lessAverage" property="lessAverage"/>
        <result column="nearAverage" property="nearAverage"/>
        <result column="overAverage" property="overAverage"/>
    </resultMap>

    <resultMap id="userFrequency" type="com.yaouguoji.platform.entity.UserFrequencyEntity">
        <result column="frequency" property="frequency"/>
        <result column="numberOfPeople" property="numberOfPeople"/>
    </resultMap>

    <select id="ageAndSexSplit" resultMap="ageAndSexSplit">
        select count(userId) numberOfPeople, Sex, age
        from (select distinct user_info.UserId userId, year(now())-year(Birthday) age, Sex
              from order_record, user_info
              where user_info.UserId=order_record.UserId
              and order_record.AddTime between #{startTime} and #{endTime}
              and ShopId=#{shopId} AND OrderStatus='已完成') w
        group by Sex,age
    </select>

    <select id="userPriceCount" resultMap="userPriceCount">
        <![CDATA[
        select
          sum(case when priceCount<#{low} then 1 else 0 end) lessAverage,
          sum(case when priceCount>#{low} and priceCount<#{high} then 1 else 0 end) nearAverage,
          sum(case when priceCount>#{high} then 1 else 0 end) overAverage
        from
          (select UserId, sum(Price) priceCount
           from order_record
           where ShopId=#{shopId} and AddTime between #{startTime} and #{endTime} and OrderStatus='已完成'
           group by UserId) w
        ]]>
    </select>

    <select id="averageAndTotalPrice" resultType="java.util.Map">
        select AVG(priceCount) averagePrice, SUM(priceCount) totalPrice
        from(
            select UserId,sum(Price) priceCount
            from order_record
            where ShopId=#{shopId} and AddTime between #{startTime} and #{endTime} and OrderStatus='已完成'
            group by UserId)w
    </select>

    <select id="userFrequencyCount" resultMap="userFrequency">
        select frequency,count(UserId) numberOfPeople
        from
        (select UserId,count(userId) frequency
        from order_record
        where ShopId=#{shopId} and AddTime between #{startTime} and #{endTime} and OrderStatus='已完成'
        group by UserId)w
        group by frequency
    </select>

    <select id="averageAndTotalFrequency" resultType="java.util.Map">
      select sum(frequency) totalFrequency,avg(frequency) averageFrequency
      from
      (select UserId,count(userId) frequency
        from order_record
        where ShopId=#{shopId} and AddTime between #{startTime} and #{endTime} and OrderStatus='已完成'
        group by UserId)w
    </select>

</mapper>
